#include <bits/stdc++.h>
using namespace std;

bool issolve(int r,int c,int N,vector<vector<int>>&maze,vector<vector<bool>>&visited,string s,vector<string>&ans){
    if(r<N && c<N && r>=0 && c>=0 && maze[r][c]==1 && !visited[r][c]){
        return true;
    }
    return false;
}
void solvemaze(int r,int c,int N,vector<vector<int>>&maze,vector<vector<bool>>&visited,string s,vector<string>&ans){
    if(r==N-1 && c==N-1){
        ans.push_back(s);
        return;
    }
    visited[r][c]=true;
    if(issolve(r+1,c,N,maze,visited,s+"D",ans)){
        solvemaze(r+1,c,N,maze,visited,s+"D",ans);
    }
     if(issolve(r-1,c,N,maze,visited,s+"U",ans)){
        solvemaze(r-1,c,N,maze,visited,s+"U",ans);
    }
     if(issolve(r,c-1,N,maze,visited,s+"L",ans)){
        solvemaze(r,c-1,N,maze,visited,s+"L",ans);
    }
     if(issolve(r,c+1,N,maze,visited,s+"R",ans)){
        solvemaze(r,c+1,N,maze,visited,s+"R",ans);
    }
    visited[r][c]=false;
}
int main() {
	int N;
	cin>>N;
	vector<vector<int>>maze(N,vector<int>(N));
	vector<vector<bool>>visited(N,vector<bool>(N,false));
	vector<string>ans;
	for(int i=0;i<N;i++){
	    for(int j=0;j<N;j++){
	        cin>>maze[i][j];
	    }
	}
	if(maze[0][0]==1){
	    solvemaze(0,0,N,maze,visited,"",ans);
	}
	if(ans.empty()){
	    cout<<-1;
	}else{
	    for(string s:ans){
	        cout<<s<<" ";
	    }
	}
}

// Input 1 :
// 4
// 1 0 0 0
// 1 1 0 1
// 1 1 0 0
// 0 1 1 1

// Output 1 :
// DDRDRR DRDDRR
